// Generated by CoffeeScript 1.4.0
(function() {
  var Tetris;

  Tetris = {};

  Tetris.gameStepTime = 1000;

  Tetris.frameTime = 0;

  Tetris.cumulatedFramTime = 0;

  Tetris._lastFrameTime = Date.now();

  Tetris.gameOver = false;

  Tetris.init = function() {
    var ASPECT, FAR, HEIGHT, NEAR, VIEW_ANGLE, WIDTH, boundingBox, boundingBoxConfig;
    WIDTH = window.innerWidth;
    HEIGHT = window.innerHeight;
    VIEW_ANGLE = 45;
    ASPECT = WIDTH / HEIGHT;
    NEAR = 0.1;
    FAR = 10000;
    Tetris.renderer = new THREE.WebGLRenderer;
    Tetris.camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);
    Tetris.scene = new THREE.Scene;
    Tetris.camera.position.z = 600;
    Tetris.scene.add(Tetris.camera);
    Tetris.renderer.setSize(WIDTH, HEIGHT);
    document.body.appendChild(Tetris.renderer.domElement);
    boundingBoxConfig = {
      width: 360,
      height: 360,
      depth: 1200,
      splitX: 6,
      splitY: 6,
      splitZ: 20
    };
    Tetris.boundingBoxConfig = boundingBoxConfig;
    Tetris.blockSize = boundingBoxConfig.width / boundingBoxConfig.splitX;
    boundingBox = new THREE.Mesh(new THREE.CubeGeometry(boundingBoxConfig.width, boundingBoxConfig.height, boundingBoxConfig.depth, boundingBoxConfig.splitX, boundingBoxConfig.splitY, boundingBoxConfig.splitZ), new THREE.MeshBasicMaterial({
      color: 0xFFAA00,
      wireframe: true
    }));
    Tetris.scene.add(boundingBox);
    Tetris.renderer.render(Tetris.scene, Tetris.camera);
    Tetris.stats = new Stats();
    Tetris.stats.domElement.style.position = 'absolute';
    Tetris.stats.domElement.style.top = '10px';
    Tetris.stats.domElement.style.left = '10px';
    document.body.appendChild(Tetris.stats.domElement);
    return document.getElementById("play_button").addEventListener('click', function(event) {
      event.preventDefault();
      return Tetris.start;
    });
  };

  Tetris.start = function() {
    document.getElementById("menu").style.display = "none";
    Tetris.pointsDOM = document.getElementById("points");
    Tetris.pointsDOM.style.display = "block";
    return Tetris.animate;
  };

  Tetris.animate = function() {
    var time;
    time = Date.now();
    Tetris.frameTime = time - Tetris._lastFrameTime;
    Tetris._lastFrameTime = time;
    Tetris.cumulatedFramTime += Tetris.frameTime;
    while (Tetris.cumulatedFramTime > Tetris.gameStepTime) {
      Tetris.cumulatedFramTime -= Tetris.gameStepTime;
    }
    Tetris.renderer.render(Tetris.scene, Tetris.camera);
    Tetris.stats.update();
    if (!Tetris.gameOver) {
      return window.requestAnimationFrame(Tetris.animate);
    }
  };

}).call(this);
