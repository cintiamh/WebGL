// Generated by CoffeeScript 1.4.0
(function() {
  var ASPECT, BLOCK_SIZE, FAR, HEIGHT, NEAR, REFRESH_RATE, TABLE_DEPTH, TABLE_HEIGHT, TABLE_WIDTH, VIEW_ANGLE, WIDTH, addStaticBlock, animate, boundingBox, camera, canvas, cube, points, renderer, scene, staticBlocks, stepTime, zColors;

  WIDTH = 600;

  HEIGHT = 600;

  REFRESH_RATE = 60;

  TABLE_WIDTH = 6;

  TABLE_HEIGHT = 6;

  TABLE_DEPTH = 20;

  BLOCK_SIZE = WIDTH / TABLE_WIDTH;

  VIEW_ANGLE = 45;

  ASPECT = WIDTH / HEIGHT;

  NEAR = 0.1;

  FAR = 10000;

  stepTime = 1000;

  points = 0;

  canvas = $('#canvas');

  renderer = new THREE.WebGLRenderer;

  camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);

  scene = new THREE.Scene;

  scene.add(camera);

  camera.position.z = TABLE_DEPTH * BLOCK_SIZE / 2 + 225;

  renderer.setSize(WIDTH, HEIGHT);

  canvas.append(renderer.domElement);

  boundingBox = new THREE.Mesh(new THREE.CubeGeometry(TABLE_WIDTH * BLOCK_SIZE, TABLE_HEIGHT * BLOCK_SIZE, TABLE_DEPTH * BLOCK_SIZE, TABLE_WIDTH, TABLE_HEIGHT, TABLE_DEPTH), new THREE.MeshBasicMaterial({
    color: 0xFFAA00,
    wireframe: true
  }));

  scene.add(boundingBox);

  cube = new THREE.Mesh(new THREE.CubeGeometry(BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE), new THREE.MeshBasicMaterial({
    color: 0xFF0000
  }));

  cube.position.z = -TABLE_DEPTH * BLOCK_SIZE / 2;

  cube.position.x = BLOCK_SIZE / 2;

  cube.position.y = BLOCK_SIZE / 2;

  scene.add(cube);

  renderer.render(scene, camera);

  staticBlocks = [];

  zColors = [0x6666ff, 0x66ffff, 0xcc68EE, 0x666633, 0x66ff66, 0x9966ff, 0x00ff66, 0x66EE33, 0x003399, 0x330099, 0xFFA500, 0x99ff00, 0xee1289, 0x71C671, 0x00BFFF, 0x666633, 0x669966, 0x9966ff];

  addStaticBlock = function(x, y, z) {
    if (staticBlocks[x] === void 0) {
      staticBlocks[x] = [];
    }
    if (staticBlocks[x][y] === void 0) {
      return staticBlocks[x][y] = [];
    }
  };

  animate = function(t) {
    renderer.render(scene, camera);
    return window.requestAnimationFrame(animate, renderer.domElement);
  };

  animate($.now());

}).call(this);
